import { useState, useEffect } from 'react';
import useSWR from 'swr';
// page is pre-rendered by nextjs, but data is not prapared / pre-generated by nextjs
// data fetched on the client side

function LastSalesPage(props) {
  const [sales, setSales] = useState(props.sales);

  const fetcher = (url) => fetch(url).then((response) => response.json());
  const { data, error } = useSWR(
    'https://nextjs-5417c-default-rtdb.europe-west1.firebasedatabase.app/sales.json',
    fetcher
  );

  useEffect(() => {
    if (data) {
      const transformedSales = [];

      for (const key in data) {
        transformedSales.push({
          id: key,
          username: data[key].username,
          volume: data[key].volume,
        });
      }
      setSales(transformedSales);
    }
  }, [data]);

  if (error) return <p> no data ... yet ? </p>;
  if (!data && !sales) return <p> ... loading </p>;

  return (
    <ul>
      {sales.map((sale) => (
        <li key={sale.id}>
          {sale.username} - {sale.volume}
        </li>
      ))}
    </ul>
  );
}

export default LastSalesPage;

// set nextjs to re-render every 10 seconds,
// so this page do both, made static, and build every 10 seconds, but it also fetch data in real time to mix both and provide the best experience

export async function getStaticProps() {
  const response = await fetch(
    'https://nextjs-5417c-default-rtdb.europe-west1.firebasedatabase.app/sales.json'
  );
  const data = await response.json();
  const transformedSales = [];
  for (const key in data) {
    transformedSales.push({
      id: key,
      username: data[key].username,
      volume: data[key].volume,
    });
  }
  return { props: { sales: transformedSales }, revalidate: 10 };
}
